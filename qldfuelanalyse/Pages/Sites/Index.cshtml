@page
@model qldfuelanalyse.Pages.Sites.IndexModel

@{
    ViewData["Title"] = "Sites";
}

<h1>Index</h1>
<table class="table">

    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.SitesObj.Sites.First().SiteName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SitesObj.Sites.First().SiteBrand)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SitesObj.Sites.First().SiteSuburb)
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.SitesObj.Sites)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.SiteName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SiteBrand)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SiteSuburb)
                </td>
                <td>
                    <a asp-page="./Details" asp-route-id="@item.SiteId">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{int PerPage = 10;}
@{int PageNum = int.Parse(Model.PageNum);}
@*this doesn't look very good*@
@{int TotalPages = (int)Math.Ceiling((double)Model.SitesObj.QueryInfo.RowCount / (double)PerPage);}
@if (PageNum > 1)
{
    <a asp-page="/Sites/index" asp-route-PageNum="@(PageNum - 1 )">Previous Page</a>
}

@if (PageNum < TotalPages)
{
    <a asp-page="/Sites/index" asp-route-PageNum="@(PageNum + 1 )">Next Page</a>
}